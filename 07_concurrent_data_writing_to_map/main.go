package main

import (
	"fmt"
	"sync"
)

// Реализовать конкурентную запись данных в map.

func main() {
	m := make(map[int]bool)
	mu := sync.Mutex{}     // создание мютекса для безопасного доступа к общим ресурсам
	wg := sync.WaitGroup{} // создание waitGroup для ожидания завершения всех горутин

	for num := 0; num < 10000; num++ { // создание горутин и значений для мапы
		wg.Add(1) // каждую новую горутину добавляется в группу
		go func(num int, m map[int]bool, mu *sync.Mutex, wg *sync.WaitGroup) {
			mu.Lock() // блокировка доступа перед записью в мапу
			m[num] = true
			mu.Unlock() // разблокировка доступа
			wg.Done()   // удаление горутины из группы

		}(num, m, &mu, &wg)
	}

	wg.Wait()                           // ожидание завершения работы все горутин
	fmt.Printf("%v из 10000\n", len(m)) // печать длины мапы для наглядности того, что все данные записались без потерь
	// вывод:
	// 10000 из 10000
}
